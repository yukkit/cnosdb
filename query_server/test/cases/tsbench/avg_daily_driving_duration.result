-- EXECUTE SQL: DROP DATABASE IF EXISTS avg_daily_driving_duration; --
200 OK


-- EXECUTE SQL: CREATE DATABASE avg_daily_driving_duration with TTL '3650d'; --
200 OK


-- EXECUTE SQL: drop table if EXISTS readings; --
200 OK


-- EXECUTE SQL: CREATE EXTERNAL TABLE readings STORED AS PARQUET LOCATION 'query_server/test/resource/parquet/part-0.parquet'; --
200 OK


-- EXECUTE SQL: SELECT count("mv")/ 6 as "hours driven" FROM ( SELECT DATE_BIN( INTERVAL '10 minutes', time, TIMESTAMP '1970-01-01T00:00:00Z' ) as "time", "fleet", "name", "driver", avg("velocity") as "mv" FROM "readings" WHERE time > '2022-01-01T00:00:00Z' AND time < '2022-02-01T00:00:00Z' GROUP BY DATE_BIN( INTERVAL '10 minutes', time, TIMESTAMP '1970-01-01T00:00:00Z' ), "fleet", "name", "driver" ) GROUP BY DATE_BIN( INTERVAL '1 day', time, TIMESTAMP '1970-01-01T00:00:00Z' ), "fleet", "name", "driver" order by fleet,name,driver; --
200 OK
hours driven
5
5
5
0
5
5

-- EXECUTE SQL: SELECT count("mv")/ 6 as "hours driven" FROM ( SELECT time_window(time, interval '10 minute') as "time", "fleet", "name", "driver", avg("velocity") as "mv" FROM "readings" WHERE time > '2022-01-01T00:00:00Z' AND time < '2022-02-01T00:00:00Z' GROUP BY time_window(time, interval '10 minute'), "fleet", "name", "driver" ) GROUP BY time_window(time.start, interval '1 day'), "fleet", "name", "driver" order by fleet,name,driver; --
200 OK
hours driven
5
5
5
0
5
5

-- EXECUTE SQL: drop table if exists readings_kv; --
200 OK


-- EXECUTE SQL: create table readings_kv( latitude double, longitude double, elevation double, velocity double, heading double, grade double, fuel_consumption double, load_capacity double, fuel_capacity double, nominal_fuel_consumption double, tags(name, fleet, driver, model, device_version) ); --
200 OK


-- EXECUTE SQL: insert into readings_kv select * from readings; --
200 OK
rows
8192

-- EXECUTE SQL: SELECT count("mv")/ 6 as "hours driven" FROM ( SELECT DATE_BIN( INTERVAL '10 minutes', time, TIMESTAMP '1970-01-01T00:00:00Z' ) as "time", "fleet", "name", "driver", avg("velocity") as "mv" FROM "readings_kv" WHERE time > '2022-01-01T00:00:00Z' AND time < '2022-02-01T00:00:00Z' GROUP BY DATE_BIN( INTERVAL '10 minutes', time, TIMESTAMP '1970-01-01T00:00:00Z' ), "fleet", "name", "driver" ) GROUP BY DATE_BIN( INTERVAL '1 day', time, TIMESTAMP '1970-01-01T00:00:00Z' ), "fleet", "name", "driver" order by fleet,name,driver; --
200 OK
hours driven
5
5
5
0
5
5

-- EXECUTE SQL: SELECT count("mv")/ 6 as "hours driven" FROM ( SELECT time_window(time, interval '10 minute') as "time", "fleet", "name", "driver", avg("velocity") as "mv" FROM "readings_kv" WHERE time > '2022-01-01T00:00:00Z' AND time < '2022-02-01T00:00:00Z' GROUP BY time_window(time, interval '10 minute'), "fleet", "name", "driver" ) GROUP BY time_window(time.start, interval '1 day'), "fleet", "name", "driver" order by fleet,name,driver; --
200 OK
hours driven
5
5
5
0
5
5
